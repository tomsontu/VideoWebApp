@page
@model Videos.UI.Pages.DashboardModel
@{
	List<string> labels = Model.CreatedCountByMonth.Keys.ToList().Select(x => x.Year.ToString() + "/" + x.Month.ToString()).ToList();
	List<int> values = Model.CreatedCountByMonth.Values.ToList();
	IEnumerable<(int DiggCount, int PlayCount)> DiggPlayList = Model.DiggPlayList;
	var diggCounts = Model.DiggPlayList.Select(item => item.DiggCount).ToArray();
	var playCounts = Model.DiggPlayList.Select(item => item.PlayCount).ToArray();
}
@* <div style="display: flex; flex-wrap: wrap;">
	<!-- First line -->
	<div style="flex: 1; margin-right: 10px;">
		<canvas id="barChart"></canvas>
	</div>
	<div style="flex: 1; margin-right: 10px;">
		<div style="width: 300px; height: 300px;">
			<canvas id="pieChart"></canvas>
		</div>
	</div>
	<!-- Second line -->
	<div style="flex: 1;">
		<div style="width: 100%; height: 400px;">
			<canvas id="scatterDiggPlayChart"></canvas>
		</div>
	</div>
</div> *@

<div style="display: flex; flex-wrap: wrap;">
	<table>
		<tr>
			<td><canvas id="barChart"></canvas></td>
			<td><canvas id="pieChart"></canvas></td>
		</tr>
		<tr>
			<td colspan="2">

				<canvas id="scatterDiggPlayChart" style="width: 800px">



			</td>
		</tr>
		<tr>
			<td>
				<canvas id="durationPieChart"></canvas>
			</td>
			<td>
				<canvas id="durationBarChart" width="200" height="200"></canvas>
			</td>
		</tr>
	</table>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
	const labels = @Html.Raw(Json.Serialize(labels));
	const values = @Html.Raw(Json.Serialize(values));

	const barCtx = document.getElementById('barChart');
	const pieCtx = document.getElementById('pieChart');
	const scatterDiggPlayCtx = document.getElementById('scatterDiggPlayChart').getContext('2d');
	const durationCtx = document.getElementById('durationPieChart').getContext('2d');
	const durationBarCtx = document.getElementById('durationBarChart').getContext('2d');
	var durationData = @Html.Raw(Json.Serialize(Model.DurationCategoryCount));
	var durationLabels = Object.keys(durationData);
	var durationChartData = Object.values(durationData);

	new Chart(barCtx, {
		type: 'bar',
		data: {
			labels: labels,
			datasets: [{
				label: '# of Creations by Month',
				data: values,
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					beginAtZero: true
				}
			}
		}
	});

	new Chart(pieCtx, {
		type: 'pie',
		data: {
			labels: labels,
			datasets: [{
				label: '# of Creations by Month',
				data: values,
				borderWidth: 1
			}]
		},
		options: {
			responsive: true
		}
	});

	new Chart(scatterDiggPlayCtx, {
		type: 'scatter',
		data: {
			datasets: [{
						label: 'Scatter Plot',
						data: [
							@for (var i = 0; i < diggCounts.Length; i++)
							{
								@:{ x: @playCounts[i], y: @diggCounts[i] },
							}
						],
						backgroundColor: 'rgba(255, 99, 132, 0.5)', // Customize point color
						borderColor: 'rgba(255, 99, 132, 1)', // Customize point border color
						borderWidth: 1
					}]
		},

		options: {
			scales: {
				x: {
					type: 'linear', // Use linear scale for x-axis
					position: 'bottom',
					title: {
						display: true,
						text: 'PlayCount' // X axis title
					},
					min: 100000,
					max: 3500000,
				},
				y: {
					type: 'linear', // Use linear scale for y-axis
					position: 'left',
					title: {
						display: true,
						text: 'DiggCount' // X axis title
					},
					
				}
			}
		}
	});

	new Chart(durationCtx, {
		type: 'pie',
		data: {
			labels: durationLabels,
			datasets: [{
				label: '#',
				data: durationChartData,
				backgroundColor: [
					'rgba(255, 99, 132, 0.6)',
					'rgba(54, 162, 235, 0.6)',
					'rgba(255, 206, 86, 0.6)',
					'rgba(75, 192, 192, 0.6)',
					'rgba(153, 102, 255, 0.6)',
					'rgba(255, 159, 64, 0.6)'
				]
			}]
		},
		options: {
			responsive: true,
			maintainAspectRatio: false
		}
	});

	new Chart(durationBarCtx, {
		type: 'bar',
		data: {
			labels: durationLabels,
			datasets: [{
				label: '#',
				data: durationChartData,
				backgroundColor: [
					'rgba(255, 99, 132, 0.6)',
					'rgba(54, 162, 235, 0.6)',
					'rgba(255, 206, 86, 0.6)',
					'rgba(75, 192, 192, 0.6)',
					'rgba(153, 102, 255, 0.6)',
					'rgba(255, 159, 64, 0.6)'
				],
				borderColor: [
					'rgba(255, 99, 132, 1)',
					'rgba(54, 162, 235, 1)',
					'rgba(255, 206, 86, 1)',
					'rgba(75, 192, 192, 1)',
					'rgba(153, 102, 255, 1)',
					'rgba(255, 159, 64, 1)'
				],
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					beginAtZero: true
				}
			}
		}
	});
</script>

@section HeadContent {
	<style type="text/css">

		table {
			border-collapse: separate;
			border-spacing: 50px;
		}

		td {
			border: 0px solid black; /* For demonstration purposes */
			padding: 0px; /* Optional: Add padding to cells */
		}
	</style>
}

