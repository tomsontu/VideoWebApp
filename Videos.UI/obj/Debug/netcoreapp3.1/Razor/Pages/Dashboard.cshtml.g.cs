#pragma checksum "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml" "{8829d00f-11b8-4213-878b-770e8597ac16}" "fb092900a15b3baecf3b42d02f5aa2a05aae2c4053578b874435656b8b382db7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Videos.UI.Pages.Pages_Dashboard), @"mvc.1.0.razor-page", @"/Pages/Dashboard.cshtml")]
namespace Videos.UI.Pages
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Mvc;
    using global::Microsoft.AspNetCore.Mvc.Rendering;
    using global::Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\_ViewImports.cshtml"
using Videos.UI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\_ViewImports.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"fb092900a15b3baecf3b42d02f5aa2a05aae2c4053578b874435656b8b382db7", @"/Pages/Dashboard.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"Sha256", @"3c0ade19a894f4c6bafd4c97e19525c65b86e9d677e2eaa826ea978498c53a06", @"/Pages/_ViewImports.cshtml")]
    #nullable restore
    public class Pages_Dashboard : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
  
	List<string> labels = Model.CreatedCountByMonth.Keys.ToList().Select(x => x.Year.ToString() + "/" + x.Month.ToString()).ToList();
	List<int> values = Model.CreatedCountByMonth.Values.ToList();
	//List<string> dateLabels = Model.CreatedCountByMonth.Keys.ToList().Select(x => x.Year.ToString() + "/" + x.Month.ToString()).ToList();
	List<double> avgPlayValues = Model.AveragePlayByMonth.Values.ToList();
	List<double> avgDiggValues = Model.AverageDiggByMonth.Values.ToList();
	List<double> avgCollectValues = Model.AverageCollectByMonth.Values.ToList();
	List<double> avgShareValues = Model.AverageShareByMonth.Values.ToList();
	IEnumerable<(int DiggCount, int PlayCount)> DiggPlayList = Model.DiggPlayList;
	var diggCounts = Model.DiggPlayList.Select(item => item.DiggCount).ToArray();
	var playCounts = Model.DiggPlayList.Select(item => item.PlayCount).ToArray();

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""d-flex justify-content-center mt-4"">
	<table>
		<tr>
			<td><canvas id=""barChart"" width=""300"" height=""300""></canvas></td>
			<td><canvas id=""pieChart"" width=""300"" height=""300""></canvas></td>
			<td>
				<canvas id=""durationPieChart"" width=""300"" height=""300""></canvas>
			</td>
			<td>
				<canvas id=""durationBarChart"" width=""300"" height=""300""></canvas>
			</td>
		</tr>
		<tr>
			<td colspan=""4"">

				<canvas id=""scatterDiggPlayChart"" height=""100""></canvas>


			</td>
		</tr>
		<tr>
			<td>
				<canvas id=""avgPlayBarChart"" height=""90"" width=""90""></canvas>
				
				
			</td>
			<td><canvas id=""avgDiggBarChart"" height=""90"" width=""90""></canvas></td>
			<td colspan=""2""><canvas id=""avgCollectShareBarChart""></canvas></td>
		</tr>
	</table>
</div>

<script src=""https://cdn.jsdelivr.net/npm/chart.js""></script>

<script>
	const labels = ");
#nullable restore
#line 68 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
           Write(Html.Raw(Json.Serialize(labels)));

#line default
#line hidden
#nullable disable
            WriteLiteral("; //date labels YYYY-M\r\n\tconst values = ");
#nullable restore
#line 69 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
           Write(Html.Raw(Json.Serialize(values)));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n\r\n\tconst avgPlayValues = ");
#nullable restore
#line 71 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
                  Write(Html.Raw(Json.Serialize(avgPlayValues)));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n\tconst avgDiggValues = ");
#nullable restore
#line 72 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
                  Write(Html.Raw(Json.Serialize(avgDiggValues)));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n\tconst avgCollectValues = ");
#nullable restore
#line 73 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
                     Write(Html.Raw(Json.Serialize(avgCollectValues)));

#line default
#line hidden
#nullable disable
            WriteLiteral(";\r\n\tconst avgShareValues = ");
#nullable restore
#line 74 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
                   Write(Html.Raw(Json.Serialize(avgShareValues)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";

	const barCtx = document.getElementById('barChart');
	const pieCtx = document.getElementById('pieChart');
	const scatterDiggPlayCtx = document.getElementById('scatterDiggPlayChart').getContext('2d');
	const durationCtx = document.getElementById('durationPieChart').getContext('2d');
	const durationBarCtx = document.getElementById('durationBarChart').getContext('2d');
	const avgPlayBarCtx = document.getElementById('avgPlayBarChart').getContext('2d');
	const avgDiggBarCtx = document.getElementById('avgDiggBarChart').getContext('2d');
	const avgCollectShareBarCtx = document.getElementById('avgCollectShareBarChart').getContext('2d');

	var durationData = ");
#nullable restore
#line 85 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
               Write(Html.Raw(Json.Serialize(Model.DurationCategoryCount)));

#line default
#line hidden
#nullable disable
            WriteLiteral(@";
	var durationLabels = Object.keys(durationData);
	var durationChartData = Object.values(durationData);

	new Chart(barCtx, {
		type: 'bar',
		data: {
			labels: labels,
			datasets: [{
				label: '# of Creations by Month',
				data: values,
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					beginAtZero: true
				}
			}
		}
	});

	new Chart(pieCtx, {
		type: 'pie',
		data: {
			labels: labels,
			datasets: [{
				label: '# of Creations by Month',
				data: values,
				borderWidth: 1
			}]
		},
		options: {
			responsive: true
		}
	});

	new Chart(scatterDiggPlayCtx, {
		type: 'scatter',
		data: {
			datasets: [{
						label: 'Relation between PlayCount and DiggCount',
						data: [
");
#nullable restore
#line 129 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
        for (var i = 0; i < diggCounts.Length; i++)
							{

#line default
#line hidden
#nullable disable
            WriteLiteral("\t\t\t\t\t\t\t\t");
            WriteLiteral("{ x: ");
#nullable restore
#line 131 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
          Write(playCounts[i]);

#line default
#line hidden
#nullable disable
            WriteLiteral(", y: ");
#nullable restore
#line 131 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
                             Write(diggCounts[i]);

#line default
#line hidden
#nullable disable
            WriteLiteral(" },\r\n");
#nullable restore
#line 132 "D:\Users\15380\Source\Repos\Videos\Videos.UI\Pages\Dashboard.cshtml"
							}

#line default
#line hidden
#nullable disable
            WriteLiteral(@"						],
						backgroundColor: 'rgba(255, 99, 132, 0.5)', // Customize point color
						borderColor: 'rgba(255, 99, 132, 1)', // Customize point border color
						borderWidth: 1
					}]
		},

		options: {
			scales: {
				x: {
					type: 'linear', // Use linear scale for x-axis
					position: 'bottom',
					title: {
						display: true,
						text: 'PlayCount' // X axis title
					},
					min: 100000,
					max: 3500000,
				},
				y: {
					type: 'linear', // Use linear scale for y-axis
					position: 'left',
					title: {
						display: true,
						text: 'DiggCount' // X axis title
					},
					
				}
			}
		}
	});

	new Chart(durationCtx, {
		type: 'pie',
		data: {
			labels: durationLabels,
			datasets: [{
				label: '#',
				data: durationChartData,
				backgroundColor: [
					'rgba(255, 99, 132, 0.6)',
					'rgba(54, 162, 235, 0.6)',
					'rgba(255, 206, 86, 0.6)',
					'rgba(75, 192, 192, 0.6)',
					'rgba(153, 102, 255, 0.6)',
					'rgba(255, 159, 64, 0.6");
            WriteLiteral(@")'
				]
			}]
		},
		options: {
			responsive: true,
			maintainAspectRatio: false
		}
	});

	new Chart(durationBarCtx, {
		type: 'bar',
		data: {
			labels: durationLabels,
			datasets: [{
				label: '#',
				data: durationChartData,
				backgroundColor: [
					'rgba(255, 99, 132, 0.6)',
					'rgba(54, 162, 235, 0.6)',
					'rgba(255, 206, 86, 0.6)',
					'rgba(75, 192, 192, 0.6)',
					'rgba(153, 102, 255, 0.6)',
					'rgba(255, 159, 64, 0.6)'
				],
				borderColor: [
					'rgba(255, 99, 132, 1)',
					'rgba(54, 162, 235, 1)',
					'rgba(255, 206, 86, 1)',
					'rgba(75, 192, 192, 1)',
					'rgba(153, 102, 255, 1)',
					'rgba(255, 159, 64, 1)'
				],
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					beginAtZero: true
				}
			}
		}
	});

	new Chart(avgPlayBarCtx, {
		type: 'bar',
		data: {
			labels: labels,
			datasets: [{
				label: 'Avg Play Count by Month',
				data: avgPlayValues,
				borderColor: 'rgba(75, 192, 192, 1)', // Cus");
            WriteLiteral(@"tomize line color
				backgroundColor: 'rgba(75, 192, 192, 0.6)', // Customize fill color
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					beginAtZero: true, // Start y-axis at 0
					title: {
						display: true,
						text: 'AvgPlayCount' // Y axis title
					},
				},
				x: {
					title: {
						display: true,
						text: 'Month' // X axis title
					},
				}
			}
		}
	});

	new Chart(avgDiggBarCtx, {
		type: 'bar',
		data: {
			labels: labels,
			datasets: [{
				label: 'Avg Digg Count by Month',
				data: avgDiggValues,
				borderColor: 'rgba(255, 159, 64, 1)', // Customize line color
				backgroundColor: 'rgba(255, 159, 64, 0.6)', // Customize fill color
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					beginAtZero: true, // Start y-axis at 0
					title: {
						display: true,
						text: 'AvgDiggCount' // Y axis title
					},
				},
				x: {
					title: {
						display: true,
						text: 'Month' // X axis title
	");
            WriteLiteral(@"				},
				}
			}
		}
	});

	new Chart(avgCollectShareBarCtx, {
		type: 'bar',
		data: {
			labels: labels,
			datasets: [{
				label: 'Avg Collect Count by Month',
				data: avgCollectValues,
				//borderColor: 'rgba(255, 99, 132, 1)', // Customize line color
				//backgroundColor: 'rgba(255, 99, 132, 0.2)', // Customize fill color
				borderWidth: 1
			}, {
				label: 'Avg Share Count by Month',
				data: avgShareValues,
				//borderColor: 'rgba(255, 99, 132, 1)', // Customize line color
				//backgroundColor: 'rgba(255, 99, 132, 0.2)', // Customize fill color
				borderWidth: 1
			}]
		},
		options: {
			scales: {
				y: {
					beginAtZero: true, // Start y-axis at 0
					title: {
						display: true,
						text: 'Avg Count' // Y axis title
					},
				},
				x: {
					title: {
						display: true,
						text: 'Month' // X axis title
					},
				}
			}
		}
	});
</script>

");
            DefineSection("HeadContent", async() => {
                WriteLiteral("\r\n\t<style type=\"text/css\">\r\n\r\n\t\ttable {\r\n\t\t\tborder-collapse: separate;\r\n\t\t\tborder-spacing: 50px;\r\n\t\t}\r\n\r\n\t\ttd {\r\n\t\t\tborder: 0px solid black; /* For demonstration purposes */\r\n\t\t\tpadding: 0px; /* Optional: Add padding to cells */\r\n\t\t}\r\n\t</style>\r\n");
            }
            );
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Videos.UI.Pages.DashboardModel> Html { get; private set; } = default!;
        #nullable disable
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Videos.UI.Pages.DashboardModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Videos.UI.Pages.DashboardModel>)PageContext?.ViewData;
        public Videos.UI.Pages.DashboardModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
